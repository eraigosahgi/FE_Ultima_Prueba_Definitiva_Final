//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HGInetFeAPI.ServicioAcuseRecibo {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="HGInetFacturaElectronica.ServiciosWcf", ConfigurationName="ServicioAcuseRecibo.ServicioAcuseRecibo")]
    public interface ServicioAcuseRecibo {
        
        [System.ServiceModel.OperationContractAttribute(Action="HGInetFacturaElectronica.ServiciosWcf/ServicioAcuseRecibo/Test", ReplyAction="HGInetFacturaElectronica.ServiciosWcf/ServicioAcuseRecibo/TestResponse")]
        HGInetFeAPI.ServicioAcuseRecibo.TestResponse Test(HGInetFeAPI.ServicioAcuseRecibo.TestRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="HGInetFacturaElectronica.ServiciosWcf/ServicioAcuseRecibo/Test", ReplyAction="HGInetFacturaElectronica.ServiciosWcf/ServicioAcuseRecibo/TestResponse")]
        System.Threading.Tasks.Task<HGInetFeAPI.ServicioAcuseRecibo.TestResponse> TestAsync(HGInetFeAPI.ServicioAcuseRecibo.TestRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Test", WrapperNamespace="HGInetFacturaElectronica.ServiciosWcf", IsWrapped=true)]
    public partial class TestRequest {
        
        public TestRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TestResponse", WrapperNamespace="HGInetFacturaElectronica.ServiciosWcf", IsWrapped=true)]
    public partial class TestResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="HGInetFacturaElectronica.ServiciosWcf", Order=0)]
        public string TestResult;
        
        public TestResponse() {
        }
        
        public TestResponse(string TestResult) {
            this.TestResult = TestResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServicioAcuseReciboChannel : HGInetFeAPI.ServicioAcuseRecibo.ServicioAcuseRecibo, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioAcuseReciboClient : System.ServiceModel.ClientBase<HGInetFeAPI.ServicioAcuseRecibo.ServicioAcuseRecibo>, HGInetFeAPI.ServicioAcuseRecibo.ServicioAcuseRecibo {
        
        public ServicioAcuseReciboClient() {
        }
        
        public ServicioAcuseReciboClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicioAcuseReciboClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioAcuseReciboClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioAcuseReciboClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public HGInetFeAPI.ServicioAcuseRecibo.TestResponse Test(HGInetFeAPI.ServicioAcuseRecibo.TestRequest request) {
            return base.Channel.Test(request);
        }
        
        public System.Threading.Tasks.Task<HGInetFeAPI.ServicioAcuseRecibo.TestResponse> TestAsync(HGInetFeAPI.ServicioAcuseRecibo.TestRequest request) {
            return base.Channel.TestAsync(request);
        }
    }
}
