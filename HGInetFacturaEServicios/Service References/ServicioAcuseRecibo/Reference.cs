//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HGInetFacturaEServicios.ServicioAcuseRecibo {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="HGInetFacturaElectronica.ServiciosWcf", ConfigurationName="ServicioAcuseRecibo.ServicioAcuseRecibo")]
    public interface ServicioAcuseRecibo {
        
        [System.ServiceModel.OperationContractAttribute(Action="HGInetFacturaElectronica.ServiciosWcf/ServicioAcuseRecibo/Test", ReplyAction="HGInetFacturaElectronica.ServiciosWcf/ServicioAcuseRecibo/TestResponse")]
        HGInetFacturaEServicios.ServicioAcuseRecibo.TestResponse Test(HGInetFacturaEServicios.ServicioAcuseRecibo.TestRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="HGInetFacturaElectronica.ServiciosWcf/ServicioAcuseRecibo/Test", ReplyAction="HGInetFacturaElectronica.ServiciosWcf/ServicioAcuseRecibo/TestResponse")]
        System.IAsyncResult BeginTest(HGInetFacturaEServicios.ServicioAcuseRecibo.TestRequest request, System.AsyncCallback callback, object asyncState);
        
        HGInetFacturaEServicios.ServicioAcuseRecibo.TestResponse EndTest(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Test", WrapperNamespace="HGInetFacturaElectronica.ServiciosWcf", IsWrapped=true)]
    public partial class TestRequest {
        
        public TestRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TestResponse", WrapperNamespace="HGInetFacturaElectronica.ServiciosWcf", IsWrapped=true)]
    public partial class TestResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="HGInetFacturaElectronica.ServiciosWcf", Order=0)]
        public string TestResult;
        
        public TestResponse() {
        }
        
        public TestResponse(string TestResult) {
            this.TestResult = TestResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServicioAcuseReciboChannel : HGInetFacturaEServicios.ServicioAcuseRecibo.ServicioAcuseRecibo, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HGInetFacturaEServicios.ServicioAcuseRecibo.TestResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HGInetFacturaEServicios.ServicioAcuseRecibo.TestResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioAcuseReciboClient : System.ServiceModel.ClientBase<HGInetFacturaEServicios.ServicioAcuseRecibo.ServicioAcuseRecibo>, HGInetFacturaEServicios.ServicioAcuseRecibo.ServicioAcuseRecibo {
        
        private BeginOperationDelegate onBeginTestDelegate;
        
        private EndOperationDelegate onEndTestDelegate;
        
        private System.Threading.SendOrPostCallback onTestCompletedDelegate;
        
        public ServicioAcuseReciboClient() {
        }
        
        public ServicioAcuseReciboClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicioAcuseReciboClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioAcuseReciboClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioAcuseReciboClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<TestCompletedEventArgs> TestCompleted;
        
        public HGInetFacturaEServicios.ServicioAcuseRecibo.TestResponse Test(HGInetFacturaEServicios.ServicioAcuseRecibo.TestRequest request) {
            return base.Channel.Test(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginTest(HGInetFacturaEServicios.ServicioAcuseRecibo.TestRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTest(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HGInetFacturaEServicios.ServicioAcuseRecibo.TestResponse EndTest(System.IAsyncResult result) {
            return base.Channel.EndTest(result);
        }
        
        private System.IAsyncResult OnBeginTest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            HGInetFacturaEServicios.ServicioAcuseRecibo.TestRequest request = ((HGInetFacturaEServicios.ServicioAcuseRecibo.TestRequest)(inValues[0]));
            return this.BeginTest(request, callback, asyncState);
        }
        
        private object[] OnEndTest(System.IAsyncResult result) {
            HGInetFacturaEServicios.ServicioAcuseRecibo.TestResponse retVal = this.EndTest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTestCompleted(object state) {
            if ((this.TestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TestCompleted(this, new TestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TestAsync(HGInetFacturaEServicios.ServicioAcuseRecibo.TestRequest request) {
            this.TestAsync(request, null);
        }
        
        public void TestAsync(HGInetFacturaEServicios.ServicioAcuseRecibo.TestRequest request, object userState) {
            if ((this.onBeginTestDelegate == null)) {
                this.onBeginTestDelegate = new BeginOperationDelegate(this.OnBeginTest);
            }
            if ((this.onEndTestDelegate == null)) {
                this.onEndTestDelegate = new EndOperationDelegate(this.OnEndTest);
            }
            if ((this.onTestCompletedDelegate == null)) {
                this.onTestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTestCompleted);
            }
            base.InvokeAsync(this.onBeginTestDelegate, new object[] {
                        request}, this.onEndTestDelegate, this.onTestCompletedDelegate, userState);
        }
    }
}
